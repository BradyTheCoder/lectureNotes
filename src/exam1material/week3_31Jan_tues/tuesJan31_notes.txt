HW 2 due tonight

--> make sure to add images to your git repository!

HW 3 will be posted later today

Exam 1 is Thursday, February 9

//////////////////////////////////////////

Today:
- Review: proving statements are not equivalent; satisfiability
- Proof arguments with truth tables
- Counterexamples to arguments
- Natural deduction rules

/////////////////////////////////////////

Consider:

¬(p ∨ q)

and

¬p ∨ ¬q


How would we show they are NOT equivalent?

////////////////////////////////////////

Reminder: satisfiability

Definition?

Example: (p → ¬q) → r

Is it satisfiable?

////////////////////////////////////////

Proving an argument.

*Premises* - pieces of information we are given (assume true)
*Conclusion* - something we are trying to show logically follows
    from our premises.


///

Proofs with truth tables.

Suppose we know:

    I am in the CS department or I am in the ECE department

    I am not in the ECE department.

    If I am in the CS department, then I can log in to the CS lab computers.


I want to prove:

    I can log in to the CS lab computers and I am in the CS department.



--> How would we translate to propositional logic?





--> How might we demonstrate this with truth tables?





////////////////////////////

Another example:

Premises:
    p → ¬q
    p → q
    p ∨ q

We wish to prove:

    q


/////////////////////////////

Counterexamples to arguments.

Consider the following argument:

    Suppose we know (these are *premises*):

        If it is sunny, then I wear sunscreen.

        I wear sunscreen.

    Given that, we want to conclude (this is our proposed *conclusion*):

        It is sunny.


We wish to find a COUNTEREXAMPLE to the argument.

--> need a case where the premises are true but the conclusions are not.


--> if we can find a counterexample, then the argument is NOT VALID

--> otherwise, the argument IS VALID

////////////////////////////

Downside of proofs with truth tables?

////////////////////////////

New idea: demonstrate conclusion follows from premises using *natural deduction*
    --> use a minimal set of deduction rules
    --> for each logical operator
        - *introduction* rule: lets us introduce a claim with that operator
        - *elimination* rule: lets us extract pieces from a claim with that operator

    --> apply these rules to create new claims that logically follow


Want to prove a *sequent* of the form:

    premises ⊢ conclusion

where *premises* is a comma-separated list.



Same idea as truth tables -- want to prove that anytime the premises
are all true, then the conclusion is also true.

--> but we will show the conclusion logically follows using
a series of natural deduction rules instead of truth tables.


////////////////////////////

AND rules idea.

1) What if we wanted to INTRODUCE an AND operator, like:
      P ∧ Q


   --> in what situations do you think we could do that?
   --> what information would we already need to have?



2) What if we already had an AND statement like  P ∧ Q.

    --> what separate claims would make sense using that statement?

    --> what happened to the AND operator in both cases?



//////////////////////////

AND rule summaries.


AND introduction:

        P   Q
∧i :  ---------
        P ∧ Q



--> How could we demonstrate this rule in a truth table?



///

AND elimination:

        P ∧ Q              P ∧ Q
 ∧e1 : ---------    ∧e2 : ---------
          P                  Q



--> How could we demonstrate these rules in a truth table?

//////////////////////////////////

Natural deduction proof syntax.


    premises ⊢ conclusion
    {
        1. claim                justification
        2. claim                justification
        ...
        n. conclusion           justification
    }



claim: a propositional logic statement
justificaton: the rule justifying the corresponding claim
    (along with line numbers as needed to reference previous claims)



/////////////////////////////////

Justifications so far:

    premise

    ∧i lhsNum rhsNum

    ∧e1 andNum

    ∧e2 andNum


////////////////////////////////

Example:

Given premises:  a ∧ b, c
Use natural deduction to prove: b ∧ c


/////////////////////////////////

Using Logika to check our work.

/////////////////////////////////

Prove the following sequent:

p, q, r ⊢ r ∧ (q ∧ p)



////////////////////////////////

Prove the following sequent:

p ∧ q ∧ r ⊢ q


////////////////////////////////

Example:

if (num > 0) {
    if (num < 10) {
        //WE ARE HERE
    }
}

--> What premises do we know at that point? Translate to propositional logic.


--> How could we write an equivalent conditional statement?


--> Use natural deduction to prove that the two conditional statements are equivalent

    --> How many proofs do we need?



///////////////////////////////

Next time:

- OR rules in natural deduction
- Using natural deduction to prove two statements are equivalent
- Equivalent if-statements
- If time, implies rules in natural deduction