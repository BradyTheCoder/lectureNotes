var x: Z = n
var d: Z = 0
while (x >= a) {
    x = x - a
    d = d + 1
}

1) What is the code doing? Walk through variable updates.

Suppose n is 10 and a is 3.

10/3

Iterations: |   0   |   1   |   2   |   3   |       |
------------------------------------------------------
x:          |  10   |   7   |   4   |  1   |       |
------------------------------------------------------
d:          |   0   |   1   |   2   |  3    |       |


integer division / modulus of n/a and n%a

What about general n and a?

x: n, n-a, n-2a, ...
d: counts iterations


x == n - da

2) Choose an invariant




////////////////////////////////////////

var x: Z = readInt()
var y: Z = readInt()

assume (x > 0 ^ y > 0)

var total: Z = 0
var i: Z = 0
var j: Z = 0

while (i != x) {
    //invariant: total == 5*y*i

    var line: Z = 0
    while (j != y) {
        //invariant: line == 5*j

        line = line + 5
        j = j + 1
    }

    //line == 5*j (premise)
    //j == y        (loop condition is false)
    //line == 5*y

    i = i + 1
    total = total + line
}

//i == x premise (loop condition is false)
//total == 5*y*i premise (outer invariant is true)
//total == 5*y*x

1) What is the code doing? Walk through variable updates.



2) Choose invariants