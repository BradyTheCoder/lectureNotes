var x: Z = n
var d: Z = 0
while (x >= a) {
    x = x - a
    d = d + 1
}

1) What is the code doing? Walk through variable updates.

Suppose n is 10 and a is 3.




What about general n and a?




2) Choose an invariant



3) Where would we need to prove the invariant?




////////////////////////////////////////

var x: Z = readInt()
var y: Z = readInt()

assume (x > 0 ^ y > 0)

var total: Z = 0
var i: Z = 0
var j: Z = 0

while (i < x) {
    var line: Z = 0
    while (j < y) {
        line = line + 5
        j = j + 1
    }

    i = i + 1
    total = total + line
}

1) What is the code doing? Walk through variable updates.

2) Choose invariants



///////////////////////////////////////


//this is not a Logika program, but the idea remains

//nums is an int array

int val = nums[0];
int i = 1;

while (i < nums.length) {
    if (nums[i] < val) {
        val = nums[i];
    }
    i++;
}

nums: {7,2,4,-1,3}

1) What is the code doing? Walk through variable updates.

2) How can we describe the progress at a particular point?

