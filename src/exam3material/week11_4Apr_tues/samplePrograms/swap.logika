import org.sireum.logika._

var x: Z = readInt()
var y: Z = readInt()

//save out the original values
val xOrig: Z = x
val yOrig: Z = y

//want to swap x and y
x = x + y

l"""{
    1. x == x_old + y                   premise //from assignment
    2. xOrig == x_old                   premise //from assignment
    3. yOrig == y                       premise //from assignment
    4. x == xOrig + y                   subst2 2 1
}"""


y = x - y
l"""{
    1. y == x - y_old                   premise //from assignment
    2. x == xOrig + y_old               premise //from the previous block
    3. yOrig == y_old                   premise //from previous block
    4. x == xOrig + yOrig               algebra 2 3
    5. y == x - yOrig                   algebra 1 3
    6. y == xOrig                       algebra 4 5
    //y == xOrig

}"""

x = x - y

l"""{
    1. x == x_old - y                   premise //from assignment
    2. x_old == xOrig + yOrig           premise //from previous block
    3. y == x_old - yOrig               premise //from previous block
    4. x_old == x + y                   algebra 1
    5. x + y == xOrig + yOrig           algebra 2 4
    6. y == xOrig                       premise //from previous block
    7. x == yOrig                       algebra 5 6
    8. x == yOrig ^ y == xOrig          ^i 7 6
}"""


//what do we want to claim we did?
assert(x == yOrig & y == xOrig)
