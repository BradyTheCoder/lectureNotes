HW 6 due Tues March 7

Exam 2 will be Thurs March 9
    - more information will be posted by the end of the week
    - we'll spend some time reviewing on Tuesday

//////////////////////////////////////////////////

HW 5 comments:

3 (a). {x : x ∈ Z, |3x| < 20}

{-6,-5,...,5,6}

4. {x : x ∈ ℤ, x ≥ -5} ∪ {x : x ∈ ℤ, x ≤ 7}

Z, all integers


7 (a). If A ⋃ C = B ⋃ C, must A = B?

A ⋃ C = B ⋃ C = {1,2,3}

C = {1,2}

A={1,3}
B={2,3}


7 (b). If A ⋂ C = B ⋂ C, must A = B?

A ⋃ C = B ⋃ C = {2}

C = {1,2,3}
A={2,4,6}
B={2,5,7}


//////////////////////////////////////////////////

Today:

- More with for all introduction
- Deduction rules with the existential quantifier

//////////////////////////////////////////////////

Example:

Finish the proof that these statements are equivalent:

∀ x (P(x) ⋀ Q(x))           (∀ x P(x)) ⋀ (∀ x Q(x))

///////////////////////////////////

Are these statements equivalent?

∀ x (P(x) ⋁ Q(x))           (∀ x P(x)) ⋁ (∀ x Q(x))

P(x): x is a kid
Q(x): x is an adult

All people are kids or adults

All people are kids OR all people are adults

NOT equivalent

///////////////////////////////////

More for all examples:


(forall2.logika)
∀ x P(x) |- ∀ y P(y)

skipped - this is like what we did in the previous example

///

Suppose we have these predicates in the domain of food:

P(x): x is pizza
Q(x): x has pepperoni
K(x): x has mushrooms

Given the premises:
All pizza has pepperoni or mushrooms
All food is pizza

We want to prove:
All food has pepperoni or mushrooms



1) Translate each statement to predicate logic

All pizza has pepperoni or mushrooms
∀ x (P(x) -> Q(x) V K(x))

All food is pizza
∀ x P(x)

All food has pepperoni or mushrooms
∀ x (Q(x) V K(x))


2) Prove the sequent (in the file forall3.logika)

////////////////////////////////////////

Idea behind there exists-introduction (∃i):

        P(v)
∃i: --------------
       ∃ x P(x)

//v is some individual



If we know that: Human(Socrates)

Then we can conclude that: ∃ x (Human(x))



If we find ONE individual in a domain where a statement holds

...then THERE EXISTS an individual in the domain where the
    statement holds


//////////////////////////////////////////

Rule syntax:


Human(Socrates) |- ∃ x (Human(x))
{
    1. Human(Socrates)              premise
    2. ∃ x (Human(x))               ∃i 1 Socrates
}


/////////////////////////////////////////

Bigger example (exists1.logika):

∀ x (Human(x)->Mortal(x)), Human(Socrates) |- ∃ x (Mortal(x))



/////////////////////////////////////////


Idea behind there exists-elimination (∃e):

                { a P(a)    assume
     ∃ x P(x),    ... Q }
∃e: ------------------------------
                  Q

//think of a as an alias for the individual the ∃ statement held for
//a is "fresh" (never used before)


If we know there is at least one individual where some statement holds

...then we can introduce a (or whatever) as an ALIAS for that
    individual in a subproof

    ...whatever conclusion we reach in the subproof must be true
        overall, since a was an EXISTING individual



Structure of the subproof:

3. ∃ x P(x)
4. {
    5. a P(a)       assume //plug into your ∃ statement
    ...
    10. Q
}
11. Q               ∃e 3 4


--> Think of ∃e like OR-elimination
    ∃ x P(x) means: P(n1) V P(n2) V ... V P(nk)


**If you have an ∃ statement as a premise, you almost always
want to start with a block where you create an alias (e.g. a)
and plug it into your ∃ statement, as above

///////////////////////////////

Examples:

(exists2.logika)
∀ x (Human(x) → Mortal(x)), ∃ x (Human(x)) ⊢ ∃ x (Mortal(x))


(exists3.logika)
∃ x (P(x)) ⊢ ∃ y (P(y))


(exists4.logika)
¬(∃ x (P(x) ^ Q(x))) ⊢ ∀ x (P(x) → ¬Q(x))

    P(x): student x attends K-State
    Q(x): student x attends KU

    --> what is this argument saying?



////////////////////////////

Proof tactics for predicate logic

- see if you can do anything right away with the premises
    - ^ elimination
    - ->, and the LHS, do ->e
    - ∀, individual, ∀e

- look at top-level operator for what you are trying to prove
    trying to prove ∀ x (P(x)):
        need to use ∀i
        subproof, introduce a random individual
        prove P(random individual)
        afterwards, use ∀i to conclude ∀ x (P(x))

    trying to prove ∃ x (P(x)):
        is one of your premises a ∃ also?
        try ∃e on that premise
        is one your premises an V? try V elimination.
        none of those available? try pbc.

    trying to prove ->
        subproof
        assume LHS
        try to get to RHS
        use ->i after proof to conclude LHS->RHS


    trying to prove ¬(something)
        subproof
        assume something
        try to get _|_
        afterwards use ¬i to conclude ¬(something)


    trying to prove an V
        is one of your premises a ∃ also?
        try ∃e on that premise
        is one your premises an V? try V elimination.
        none of those available? try pbc.


    when you are in a subproof, think about what you are trying
    to prove. Find its top-level operator, approach as above.


Unsure what to do?
    - Do you have an V statement available?

    - Do you have an ∃ statement available?

    - Is negation involved, but not creating ¬(something)?
            try pbc


/////////////////////////////////////////

<--- stopped here, will do the rest on Tues March 7


Proving DeMorgan's laws

∀ x ¬P(x)       equivalent to       ¬(∃ x P(x))

∃ x ¬P(x)       equivalent to       ¬(∀ x P(x))

////////////////////////////////////////

Next time:

- a bit more with predicate logic proofs
- review for exam 2